import math

  #Task1
# Запрашиваем на число n
n = int(input("Введите число n: "))
# Используем формулу для вычисления суммы первых n положительных чисел
sum_of_numbers = (n*(n+1))/2
# Выводим результат на экран
print (f"Сумма первых {n} положительных чисел равна {sum_of_numbers}")

  #Task2
# Запрос для ввода двух целых чисел
num1 = int(input("Введите первое целое число: "))
num2 = int(input("Введите второе целое число: "))

# Операции
addition_result = num1 + num2
print(f"Сложение: {addition_result}")
substration_result = num1 - num2
print(f"Вычитание: {substration_result}")
multiplication_result = num1 * num2
print(f"Умножение: {multiplication_result}")
division_result = num1 / num2
print(f"Деление: {division_result}")
floor_division_result = num1 // num2
print(f"Целочисленное деление: {floor_division_result}")
modulus_result = num1 % num2
print(f"Остаток от деления: {modulus_result}")
exponentiation_result = num1 ** num2
print(f"Возведение в степень: {exponentiation_result}")
log10_result = math.log10(num1)
print(f"Логарифм по основанию 10 от первого числа: {round(log10_result,2)}")
# Операции сравнения
less_than_result = num1 < num2
print(f"Меньше чем: {less_than_result}")
less_equal_result = num1 <= num2
print(f"Меньше или равно: {less_equal_result}")
greater_than_result = num1 > num2
print(f"Больше чем: {greater_than_result}")
greater_equal_result = num1 >= num2
print(f"Больше или равно: {greater_equal_result}")
not_equal_result = num1 != num2
print(f"Не равно: {not_equal_result}")
equal_result = num1 == num2
print(f"Равно: {equal_result}")

  #Task3
# Запрос необходимых для задачи значений
num1 = int(input("3 задание. \nВведите первое число: "))
num2 = int(input("Введите второе число: "))
num3 = int(input("Введите третье число: "))
print(round((((num1 ** 5 + 7) / (abs(-6) * num2)) ** (1. / 3)) / (7 - num3 % num2), 3))

#Task4
# Ввод сопротивлений проводников
resistance1 = float(input("Введите сопротивление первого проводника: "))
resistance2 = float(input("Введите сопротивление второго проводника: "))
# Вычисление общего сопротивления в соответствии с формулой для соединения проводников в серии
total_resistance = resistance1 + resistance2 
# Округление результата до 1 знака после запятой 
total_resistance = round(total_resistance,1)
# Вывод результата
print(f"Общее сопротивление цепи: {total_resistance} Ом")

#Task5
# Запрашиваем скорость спортсмена в км/час
v = float(input("Введите скорость спортсмена (в км/час): "))

# Запрашиваем время в часах
t = float(input("Введите время (в часах): "))

# Рассчитываем расстояние, которое пройдет спортсмен
distance = v * t

# Для нахождения номера километра, на котором он остановится,
# используем остаток от деления на длину дороги (123 км)
position = distance % 123

# Выводим результат (номер километра) на экран
print("Спортсмен остановится на", round(position), "километре.")

#Task6
# Запрос двузначного числа
two_digit_number = int(input("Введите двузначное число: "))

# Разделяем число на десятки и единицы
tens_digit = two_digit_number // 10
ones_digit = two_digit_number % 10

# Вычисляем сумму и произведение цифр
sum_of_digits = tens_digit + ones_digit
product_of_digits = tens_digit * ones_digit

# Выводим результат для двузначного числа
print(f"Сумма цифр: {sum_of_digits}")
print(f"Произведение цифр: {product_of_digits}")

# Запрос трехзначного числа
three_digit_number = int(input("Введите трехзначное число: "))

#Task7
# Запрос ввода трех целых чисел и сохранение их в переменных a, b и c
a = int(input("Введите первое целое число: "))
b = int(input("Введите второе целое число: "))
c = int(input("Введите третье целое число: "))

# Находим наименьшее и наибольшее из введенных чисел с помощью функций min и max
min_number = min(a, b, c)
max_number = max(a, b, c)

# Находим оставшееся число путем вычитания из суммы трех чисел максимального и минимального
remaining_number = a + b + c - min_number - max_number

# Выводим числа в упорядоченном виде по возрастанию
print("Числа в порядке возрастания:", min_number, remaining_number, max_number)

#Task8
a = int(input('Введите первое число: '))
b = int(input('Введите второе число: '))
print(a, b)

# Используем XOR для обмена значениями
a = a ^ b
b = a ^ b
a = a ^ b

print(a, b)

#Task9
# Запрос названия футбольной команды
team_name = input("Введите название футбольной команды: ")

# Вывод фразы с названием команды и словами "чемпион!"
print(f"{team_name} - чемпион!")

# Создание строки из символов "-" с длиной, равной длине названия команды
line = "-" * len(team_name)
print(line)

# Преобразование названия команды в нижний регистр и вывод на экран
team_name_lower = team_name.lower()
print(f"Длина наименования команды: {len(team_name)}")
print(f"Есть ли буква 'п' в наименовании команды: {'п' in team_name_lower}")

# Подсчет количества букв "а" в названии команды
count_a = team_name_lower.count('а')
print(f"Количество букв 'а' в наименовании команды: {count_a}")


#Task10
# Запрос названия государства у пользователя
country = input("Введите название государства: ")

# Запрос столицы у пользователя
capital = input("Введите столицу этого государства: ")

# Вывод информации о государстве и его столице
print("Государство -", country + ",", "столица -", capital)

#Task11
# Заданное слово
слово = "объектно-ориентированный"

# Используем индексацию и срезы для получения нужных слов
слово_объект = слово[:6]    # слово "объект"
слово_ориентир = слово[9:17]  # слово "ориентир"
слово_тир = слово[15:18]      # слово "тир"
слово_кот = слово[17:14:-1]   # слово "кот" (с использованием шага -1 для разворота)
слово_рента = слово[-5:]     # слово "рента"

# Выводим полученные слова на экран
print(слово_объект)
print(слово_ориентир)
print(слово_тир)
print(слово_кот)
print(слово_рента)

#Task12
# Создать 2 пустых списка
a = []
b = []

# Добавить 2 вещественных числа (4.5 и 3.4) в список 'a' с помощью append
a.append(4.5)
a.append(3.4)

# Добавить 2 вещественных числа (8.7, 1.3) в список 'a' с помощью extend
a.extend([8.7, 1.3])

# Добавить 2 вещественных числа (14.5, 3.4) в список 'b' с помощью append
b.append(14.5)
b.append(3.4)

# Добавить 2 вещественных числа (8.7, 11.3) в список 'b' с помощью extend
b.extend([8.7, 11.3])

# Вставить целое число 100 на 2-е и 4-е место списка 'a'
a.insert(1, 100)
a.insert(3, 100)

# Вставить целое число 200 на 1-е и 3-е место списка 'b'
b.insert(0, 200)
b.insert(2, 200)

# Вывести списки на экран
print("Исходные списки:")
print("1-й:", a)
print("2-й:", b)

# Удалить первые элементы из списков 'a' и 'b'
del a[0]
del b[0]

# Удалить элемент 100 из списка 'a'
a.remove(100)
# Удалить элемент 200 из списка 'b'
b.remove(200)

# Вывести списки на экран после удалений
print("\nПосле удалений:")
print("1-й:", a)
print("2-й:", b)

# Создать множества из списков 'a' и 'b', а также их пересечение
sa = set(a)
sb = set(b)
sa_and_sb = sa.intersection(sb)

# Вывести экран уникальные элементы каждого списка и общие
print("\nУникальные элементы:")
print("1-й:", sa)
print("2-й:", sb)
print("общие:", sa_and_sb)

# Соединить списки 'a' и 'b'
c = a + b

# Отсортировать список 'c' по возрастанию и убыванию
c_asc = sorted(c)
c_desc = sorted(c, reverse=True)

# Среднее арифметическое элементов списка 'c', расположенных на четных местах
sr_ar = sum(c[1::2]) / len(c[1::2])

# Среднее геометрическое элементов списка 'c', расположенных на нечетных местах
sr_geom = math.prod(c[0::2]) ** (1 / len(c[0::2]))

# Максимальный и минимальный элементы
c_max = max(c)
c_min = min(c)

# Вывести результаты на экран
print("\nИтоговые:")
print("3-й:", c)
print("Сортировка (возр.):", c_asc)
print("Сортировка (убыв.):", c_desc)
print("Ср. арифм. =", "{:.2f}".format(sr_ar))
print("Ср. геометр. =", "{:.2f}".format(sr_geom))
print("Макс. и мин.:", c_max, c_min)

#Task13

